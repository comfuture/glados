name: deploy
on:
  release:
    types:
      - published
jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      SLACK_APP_TOKEN: ${{ secrets.SLACK_APP_TOKEN }}
      SLACK_SIGNING_SECRET: ${{ secrets.SLACK_SIGNING_SECRET }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      OPENAI_MODEL: ${{ secrets.OPENAI_MODEL }}
      GLADOS_ASSISTANT_ID: ${{ secrets.GLADOS_ASSISTANT_ID }}
      MONGODB_URI: ${{ secrets.MONGODB_URI }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      CLOUDFLARE_ACCESS_KEY_ID: ${{ secrets.CLOUDFLARE_ACCESS_KEY_ID }}
      CLOUDFLARE_SECRET_ACCESS_KEY: ${{ secrets.CLOUDFLARE_SECRET_ACCESS_KEY }}
      PUBLIC_R2_BUCKET_URL: ${{ secrets.PUBLIC_R2_BUCKET_URL }}
    steps:
      - uses: actions/checkout@v4
      - name: create remote context
        uses: arwynfr/actions-docker-context@v2
        with:
          docker_host: ${{ secrets.DOCKER_HOST }}
          context_name: remote
          ssh_key: ${{ secrets.SSH_KEY }}
      - name: skip strict host key checking
        run: |
          echo "Host *" >> ~/.ssh/config
          echo "  StrictHostKeyChecking no" >> ~/.ssh/config
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: build and push
        uses: docker/build-push-action@v5.2.0
        with:
          tags: ghcr.io/${{ github.repository }}:${{ github.ref_name }},ghcr.io/${{ github.repository }}:latest
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          outputs: type=image,name=target,annotation-index.org.opencontainers.image.description=Glados multi-arch image
      - name: deploy to remote
        run: |
          docker --context remote pull ghcr.io/${{ github.repository }}:latest
          docker --context remote compose up -d --force-recreate

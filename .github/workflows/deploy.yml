name: Deploy

on:
  release:
    types:
    - published

jobs:
  release-iplateia:
    runs-on: ubuntu-latest
    env:
      APP: ipny-bot
      REPOSITORY_URL: 750384400573.dkr.ecr.ap-northeast-2.amazonaws.com
      KUBECONFIG: /tmp/kubeconfig
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}

    steps:
    - name: checkout
      uses: actions/checkout@v3
      with:
        ref: ${{ github.ref }}
    - name: ensure ecr repository
      run: |
        # aws ecr create-repository --repository-name $APP > /dev/null 2>&1
        bash -c 'aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin $REPOSITORY_URL'
    - name: build and push
      run: |
        export TAG=$(echo ${{ github.ref }} | cut -d '/' -f 3 )
        docker build -t $REPOSITORY_URL/$APP:$TAG -f Dockerfile .
        docker push $REPOSITORY_URL/$APP:$TAG
    - name: replacement
      run: |
        sed -i 's@$SLACK_BOT_TOKEN@${{ secrets.SLACK_BOT_TOKEN }}@g' k8s/secret.yaml
        sed -i 's@$SLACK_SIGNING_SECRET@${{ secrets.SLACK_SIGNING_SECRET }}@g' k8s/secret.yaml
        sed -i 's@$SLACK_APP_TOKEN@${{ secrets.SLACK_APP_TOKEN }}@g' k8s/secret.yaml
        sed -i 's@$OPENAI_API_KEY@${{ secrets.OPENAI_API_KEY }}@g' k8s/secret.yaml
        sed -i 's@$TAG@'$TAG'@g' k8s/deployment.yaml
    - name: kubectl apply k8s
      run: |
        echo $KUBE_CONFIG_DATA | base64 -d > $KUBECONFIG
        aws eks --region ap-northeast-2 update-kubeconfig --name iplateia
        kubectl apply -f k8s
